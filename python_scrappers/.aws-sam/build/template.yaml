AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'python3.12 Sample SAM Template for python_scrappers

  '
Globals:
  Function:
    Timeout: 900
    Architectures: x86_64
    MemorySize: 512
    EphemeralStorage:
      Size: 512
    Environment:
      Variables:
        ENVIRONMENT: dev
    Tags:
      project: descuentapp
      environment: develop
Resources:
  ProductPricesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ScrappedProductsTable
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      AttributeDefinitions:
      - AttributeName: origin
        AttributeType: S
      - AttributeName: timestamp
        AttributeType: N
      - AttributeName: name
        AttributeType: S
      KeySchema:
      - AttributeName: origin
        KeyType: HASH
      - AttributeName: timestamp
        KeyType: RANGE
      GlobalSecondaryIndexes:
      - IndexName: NameIndex
        KeySchema:
        - AttributeName: name
          KeyType: HASH
        Projection:
          ProjectionType: INCLUDE
          NonKeyAttributes:
          - price_per_unit
          - total_price
          - image_url
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
  MySQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: MiColaSQS
      VisibilityTimeout: 900
  LambdaDispatcher:
    Type: AWS::Serverless::Function
    Metadata:
      DockerContext: /Users/pp/VirtualDesktop/proyecto/python_scrappers
      DockerTag: v1
      Dockerfile: Dockerfile.event_processor
      SamResourceId: LambdaDispatcher
    Properties:
      PackageType: Image
      Timeout: 900
      MemorySize: 4096
      EphemeralStorage:
        Size: 2048
      Policies:
      - AWSLambdaBasicExecutionRole
      - AmazonDynamoDBFullAccess
      - AmazonSQSFullAccess
      Architectures:
      - x86_64
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - MySQSQueue
              - Arn
            BatchSize: 1
      ImageUri: lambdadispatcher:v1
  AlcampoScrappingLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Architectures:
      - x86_64
      Policies:
      - AWSLambdaBasicExecutionRole
      - AmazonDynamoDBFullAccess
      - AmazonSQSFullAccess
      Events:
        FlaskAppAPI:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any
      ImageUri: alcamposcrappinglambdafunction:v1
    Metadata:
      DockerContext: /Users/pp/VirtualDesktop/proyecto/python_scrappers
      DockerTag: v1
      Dockerfile: Dockerfile
      SamResourceId: AlcampoScrappingLambdaFunction
Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  AlcampoScrappingLambdaFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - AlcampoScrappingLambdaFunction
      - Arn
  AlcampoScrappingLambdaFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - AlcampoScrappingLambdaFunctionRole
      - Arn
